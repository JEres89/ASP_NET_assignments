// <auto-generated />
using ASP_NET_assignments.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ASP_NET_assignments.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220606105029_AddCountryDatamodel")]
    partial class AddCountryDatamodel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ASP_NET_assignments.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CountryName");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1381616042,
                            CountryName = "Sverige",
                            Name = "Göteborg"
                        },
                        new
                        {
                            Id = 1397648271,
                            CountryName = "Sverige",
                            Name = "Staden"
                        },
                        new
                        {
                            Id = 2100253267,
                            CountryName = "Norge",
                            Name = "Skogen"
                        },
                        new
                        {
                            Id = 120459992,
                            CountryName = "Ingenstans",
                            Name = "Luftslottet"
                        });
                });

            modelBuilder.Entity("ASP_NET_assignments.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1095920195,
                            Name = "Sverige"
                        },
                        new
                        {
                            Id = 2016426638,
                            Name = "Norge"
                        },
                        new
                        {
                            Id = 895571250,
                            Name = "Ingenstans"
                        });
                });

            modelBuilder.Entity("ASP_NET_assignments.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phonenumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityName");

                    b.ToTable("PeopleDataTable");

                    b.HasData(
                        new
                        {
                            Id = 1343096344,
                            CityName = "Göteborg",
                            Name = "Jens Eresund",
                            Phonenumber = "+46706845909"
                        },
                        new
                        {
                            Id = 1060981163,
                            CityName = "Staden",
                            Name = "Abel Abrahamsson",
                            Phonenumber = "+00123456789"
                        },
                        new
                        {
                            Id = 1836446275,
                            CityName = "Skogen",
                            Name = "Bror Björn",
                            Phonenumber = "+5555555555"
                        },
                        new
                        {
                            Id = 207136652,
                            CityName = "Luftslottet",
                            Name = "Örjan Örn",
                            Phonenumber = "1111111111"
                        });
                });

            modelBuilder.Entity("ASP_NET_assignments.Models.City", b =>
                {
                    b.HasOne("ASP_NET_assignments.Models.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryName")
                        .HasPrincipalKey("Name")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ASP_NET_assignments.Models.Person", b =>
                {
                    b.HasOne("ASP_NET_assignments.Models.City", "City")
                        .WithMany("People")
                        .HasForeignKey("CityName")
                        .HasPrincipalKey("Name")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
